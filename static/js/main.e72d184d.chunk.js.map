{"version":3,"sources":["Api/api.js","Redux/emloyees-reducer.js","Components/Employees.jsx","Components/EmployeesContainer.jsx","App.js","reportWebVitals.js","Redux/redux-store.js","index.js","Components/Employees.module.css"],"names":["Employee","axios","ADD_ITEMS","SET_USERS","monthsArray","initial","items","months","map","month","name","id","employeesPage","state","action","type","users","length","i","choosedUser","filter","item","data","Date","dob","getMonth","push","arr_EN","Employees","React","memo","props","isEmpty","useState","checkboxs","setCheckboxs","useEffect","addItems","JSON","parse","localStorage","getItem","setItem","stringify","setUsers","className","style","employees","letter","index","array","member","lastName","charAt","sort","a","b","nameA","toUpperCase","nameB","forDiv","firstName","input","checked","indexOf","onChange","e","currentTarget","idCheck","checkboxChoose","toString","empBirthday","user","connect","dispatch","response","App","to","activeClassName","path","render","EmployeesContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","createStore","applyMiddleware","combineReducers","store","compose","thunkMiddleware","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e72d184d.chunk.js","sourcesContent":["import * as axios from 'axios';\n// const axios = require('axios');\n\n\nexport const Employee = {\n    \n    getEmployee ()  {\n        return axios.get(`https://yalantis-react-school-api.yalantis.com/api/task0/users`);\n    }\n}\n","import { Employee } from \"../Api/api\";\n\nconst ADD_ITEMS = 'ADD-ITEMS';\nconst SET_USERS = 'SET-USERS';\n\n\nlet monthsArray= [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\n            \"August\",\"September\",\"October\",\"November\",\"December\"];\nlet monthsA = monthsArray.map(month => {return {name: month, id: []}});\n\nlet initial = {\n    items: [],\n    months: monthsA\n}\n\n\n\nconst employeesPage = (state = initial, action) => {\n    switch (action.type) {\n        case ADD_ITEMS: {\n            return {\n                ...state,\n                items: action.items\n            }\n        }\n        case SET_USERS: {\n            if (action.users.length === 0){\n                state.months = monthsArray.map(month => {return {name: month, id: []}});\n            }\n            \n           for (let i = 0; i < action.users.length; i++) {\n                let choosedUser = state.items.filter(item => item.id === action.users[i]);\n                let data = new Date(choosedUser[0].dob);\n                state.months[(data.getMonth() + 1)].id.push(choosedUser[0]);\n           }\n            return {\n                ...state\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addItemsAC = (items) => ({ type: ADD_ITEMS, items });\nexport const setUsersAC = (users) => ({type: SET_USERS, users});\n\n\nexport const addItemsThunk = () => async (dispatch) => {\n    const response = await Employee.getEmployee();\n    dispatch(addItemsAC(response.data));\n}\n\nexport default employeesPage;","import style from './Employees.module.css'\nimport React, { useState, useEffect } from 'react';\nconst arr_EN = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\nconst Employees = React.memo(props => {\n\n    let [checkboxs, setCheckboxs] = useState([]);\n    \n    useEffect(() => {//getPeople\n        props.addItems();\n        \n    }, [props.items.length]);\n\n   \n    let isEmpty;\n    \n    let checkboxChoose = (id, e) => {\n        if (e.currentTarget.checked) {\n            setCheckboxs([...checkboxs, id]);\n        }\n        else{\n            setCheckboxs(checkboxs.filter((idCheck) => idCheck !== id));\n        }\n    }\n\n    useEffect(() => {\n        let items = JSON.parse(localStorage.getItem('items'));\n        if(items){\n            setCheckboxs(items);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('items', JSON.stringify(checkboxs));\n\n    }, [checkboxs]);\n    // ---------------------------------------------------------------for Birthdays\n\n    useEffect(() => {\n        if(props.items.length != 0 ){\n            props.setUsers([]); \n            props.setUsers(checkboxs);  \n        }\n\n    }, [checkboxs, props.items.length]); \n//No selected employees\n    return (<>\n        <div className={style.employees}>\n            Employees\n           <div>\n                {arr_EN\n                    .map((letter, index, array) => {\n                       \n                        return (\n                        <div  className={style.letter} id='alphabet' key={index.toString()}>\n                            <span>\n                                {letter + ' '}\n                            </span>\n                            {props.items\n                            .filter(member => {\n                                isEmpty = false;\n                                return member.lastName.charAt(0) === letter})\n                            .sort(function(a, b) {\n                                var nameA = a.lastName.toUpperCase();\n                                var nameB = b.lastName.toUpperCase();\n                                if (nameA < nameB) {\n                                  return -1;\n                                }\n                                if (nameA > nameB) {\n                                  return 1;\n                                }\n                                return 0;\n                                })\n                            .map((member, index) => {\n                                isEmpty = true;\n                                return <div className={style.forDiv} key={index}>\n                                    <span className={style.name}>{member.lastName + member.firstName}</span> \n                                    <input \n                                    className={style.input} \n                                    id={member.id} \n                                    checked={checkboxs.indexOf(member.id) != -1}\n                                    type=\"checkbox\" \n                                    onChange={(e) => checkboxChoose(member.id, e)}/>\n                                </div>})\n                            }\n                            <div>\n                                {!isEmpty\n                                && <div>---------</div>}\n                            </div>\n                        </div>)\n                })\n                    }\n                    \n                    \n            </div>\n        </div>\n        <div className={style.empBirthday}>\n           Employees Birthdays\n            {/* Прізвище Імя - день(31) Місяць, рік(1944) year*/}\n            {(checkboxs.length === 0) \n            ?  \n            <div> \n                <h3>\n                    No selected employees\n                </h3>\n            </div>\n            :\n                props.months.map(\n                    month => {\n                        return month.id.length != 0 \n                        && \n                        <div> \n                            <h3>\n                                {month.name}\n                            </h3>\n                            {\n                                month.id.map(user => \n                                    { return <div> \n                                        {user.lastName + ' ' + ' ' + user.firstName } \n                                    </div> })\n                            }\n                        </div>\n                    }\n                )\n            }\n        \n        </div>\n    </>);\n});\n\nexport default Employees;\n\n","import { connect } from \"react-redux\";\nimport { addItemsThunk, removeUserAC, setUsersAC } from \"../Redux/emloyees-reducer\";\nimport Employees from \"./Employees\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        items: state.employees.items,\n        months: state.employees.months\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        addItems: addItemsThunk,\n        setUsers: setUsersAC\n    }\n)(Employees);\n","// import logo from './logo.svg';\nimport './App.css';\nimport { NavLink, Route, Router } from 'react-router-dom';\nimport EmployeesContainer from './Components/EmployeesContainer';\n\nfunction App() {\n  return (\n    <div>\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <NavLink to='/employees' className='navLink' activeClassName='activeNavLink'>\n          EMPLOYEES\n        </NavLink>\n\n      </header>\n      <div className='content'>\n        {/* Click to the 'employees' to start */}\n        <Route path='/employees' render={() => <EmployeesContainer />} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import thunkMiddleware from \"redux-thunk\";\nimport employeesPage from \"./emloyees-reducer\";\nconst { createStore, applyMiddleware, combineReducers, compose } = require(\"redux\");\n\nconst reducers = combineReducers({\n    employees: employeesPage\n});\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Redux/redux-store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empBirthday\":\"Employees_empBirthday__-K_Ny\",\"employees\":\"Employees_employees__1EVzd\",\"letter\":\"Employees_letter__5JDul\",\"forDiv\":\"Employees_forDiv__2xvT2\",\"name\":\"Employees_name__2WW-8\",\"input\":\"Employees_input__2RIJX\"};"],"sourceRoot":""}